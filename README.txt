BlobSolver is the main class. It gets user input, parses it and makes the user's move on the board. Then creates new thread to run MoveExplorer, which creates trees of moves, each level of the tree represents a new move scenario. Every move has otherMoves which is a list of possible moves generated by move Explorer. 

After a certain amount of time, (currently 0.5s) the MoveExplorer thread is interrupted, and bestMove is called on all the depth 1 moves to determine the best one, then that one is played.

This program is just brute force. It does consider two moves to the same spot, that are both distance 1 from each other to be the same move, which saves a little bit of space.

The getMoves functions in MoveExplorer could potentially take in a list of already calculated moves, but for some reason it likes to spin its wheels. So every turn it recalculates all moves.

Most of the game rules are build into Board.java and Blob.java

The program will give a position x,y,z,w which means move blob(x,y) -> (z,w) and expects input from the user's moves in the same format.

 The program expects as input 4 numbers separated by commas corresponding to a move to be made
on the 8x8 grid. I.e. 0,7,0,6 means you want to move from the spot (0,7) on the grid to spot (0,6). The program will then
ouput its own move with the same format.

Blob wars: http://www.addictinggames.com/puzzle-games/blobwars.jsp
